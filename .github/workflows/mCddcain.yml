name: Build

on:
  push:
    branches:
      - main

jobs:
  Android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.19.4
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm install

      - name: Setup Java environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Clean duplicate icon files
        run: |
          cd android/app/src/main/res
          # 删除所有重复的png文件（保留webp）
          find . -name "ic_launcher.png" -delete
          find . -name "ic_launcher_round.png" -delete
          echo "清理完成，检查剩余文件："
          find . -name "ic_launcher*" -type f

      - name: Validate Keystore Configuration
        shell: bash
        run: |
          echo "Validating keystore configuration..."
          cd android
          
          # 解码密钥库文件
          echo "${{ secrets.KEYSTORE_STORE_FILE_BASE64 }}" | base64 --decode > app/temp_validate.keystore
          
          # 验证密钥库文件是否存在
          if [ ! -f "app/temp_validate.keystore" ]; then
            echo "Error: Keystore file decoding failed"
            exit 1
          fi
          
          echo "Keystore file decoded successfully"
          
          # 验证密钥库密码和别名
          echo "Verifying keystore password and alias..."
          keytool -list \
            -keystore app/temp_validate.keystore \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -alias "${{ secrets.KEYSTORE_KEY_ALIAS }}" > /dev/null 2>&1
          
          if [ $? -eq 0 ]; then
            echo "Keystore password and alias verified successfully"
          else
            echo "Error: Keystore password or alias is incorrect"
            rm -f app/temp_validate.keystore
            exit 1
          fi
          
          # 清理临时文件
          rm -f app/temp_validate.keystore
          echo "All keystore validations passed"

      - name: Build Android Release
        shell: bash
        run: |
          cd android
          echo "Building release version..."
          echo "${{ secrets.KEYSTORE_STORE_FILE_BASE64 }}" | base64 --decode > app/"${{ secrets.KEYSTORE_STORE_FILE }}"
          ./gradlew assembleRelease \
            -PMYAPP_UPLOAD_STORE_FILE="${{ secrets.KEYSTORE_STORE_FILE }}" \
            -PMYAPP_UPLOAD_KEY_ALIAS="${{ secrets.KEYSTORE_KEY_ALIAS }}" \
            -PMYAPP_UPLOAD_STORE_PASSWORD="${{ secrets.KEYSTORE_PASSWORD }}" \
            -PMYAPP_UPLOAD_KEY_PASSWORD="${{ secrets.KEYSTORE_KEY_PASSWORD }}"
          rm -f app/"${{ secrets.KEYSTORE_STORE_FILE }}"
          echo "Build completed!"

      - name: Get package version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      - name: Create git tag
        uses: pkgdeps/git-tag-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          version: ${{ env.PACKAGE_VERSION }}
