name: Build Android APK

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '20.19.4'
  JAVA_VERSION: '17'
  # 签名配置 - 如果设置了环境变量则使用正式签名，否则使用测试签名
  ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE || 'debug.keystore' }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD || 'android' }}
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS || 'androiddebugkey' }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD || 'android' }}

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Fix gradlew permissions
      run: |
        cd android
        chmod +x ./gradlew
        ls -la gradlew  # 验证权限
      
    - name: Install dependencies
      run: |
        npm ci
        # 如果使用Jetifier（旧版本React Native）
        # npx jetify
        
    - name: Clean duplicate icon files
      run: |
        cd android/app/src/main/res
        # 删除所有重复的png文件（保留webp）
        find . -name "ic_launcher.png" -delete
        find . -name "ic_launcher_round.png" -delete
        echo "清理完成，检查剩余文件："
        find . -name "ic_launcher*" -type f
    
    - name: Setup Android Signing
      run: |
        echo "设置Android签名配置..."
        if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
          echo "检测到正式签名配置，使用正式签名..."
          # 解码Base64格式的keystore文件
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
          # 检查文件是否成功创建
          ls -la android/app/release.keystore
        else
          echo "未检测到正式签名配置，使用测试签名..."
          echo "使用默认的debug.keystore进行构建"
        fi
      
    - name: Build Android APK
      run: |
        cd android
        if [ -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" ]; then
          echo "构建正式版本APK..."
          ./gradlew clean assembleRelease --no-daemon
        else
          echo "构建调试版本APK..."
          ./gradlew clean assembleDebug --no-daemon
        fi
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: |
          android/app/build/outputs/apk/debug/*.apk
          android/app/build/outputs/apk/release/*.apk
        retention-days: 30
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-build-logs
        path: |
          android/app/build/outputs/
          android/app/build/reports/
        retention-days: 15
